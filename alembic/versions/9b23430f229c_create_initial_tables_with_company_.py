"""create_initial_tables_with_company_management

Revision ID: 9b23430f229c
Revises: 
Create Date: 2025-06-03 19:35:32.109731

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9b23430f229c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_fee', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('requires_period', sa.Boolean(), nullable=True),
    sa.Column('specific_data_schema', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_types_id'), 'service_types', ['id'], unique=False)
    op.create_index(op.f('ix_service_types_name'), 'service_types', ['name'], unique=True)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('CLIENT_FREEMIUM', 'CLIENT_PAID', 'STAFF_COLLABORATOR', 'STAFF_MANAGER', 'STAFF_CEO', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_platform_login_at', sa.DateTime(), nullable=True),
    sa.Column('profile_image_url', sa.String(length=512), nullable=True),
    sa.Column('client_ruc', sa.String(length=11), nullable=True),
    sa.Column('business_name', sa.String(length=255), nullable=True),
    sa.Column('contact_name', sa.String(length=255), nullable=True),
    sa.Column('terms_accepted_at', sa.DateTime(), nullable=True),
    sa.Column('staff_dni', sa.String(length=15), nullable=True),
    sa.Column('staff_full_name', sa.String(length=255), nullable=True),
    sa.Column('staff_ruc_personal', sa.String(length=11), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_business_name'), 'users', ['business_name'], unique=False)
    op.create_index(op.f('ix_users_client_ruc'), 'users', ['client_ruc'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=False)
    op.create_index(op.f('ix_users_staff_dni'), 'users', ['staff_dni'], unique=True)
    op.create_index(op.f('ix_users_staff_ruc_personal'), 'users', ['staff_ruc_personal'], unique=False)
    op.create_table('monthly_client_summaries',
    sa.Column('client_user_id', sa.Integer(), nullable=False),
    sa.Column('tax_period', sa.String(length=7), nullable=False),
    sa.Column('total_sales', sa.DECIMAL(precision=14, scale=2), nullable=True),
    sa.Column('total_purchases', sa.DECIMAL(precision=14, scale=2), nullable=True),
    sa.Column('total_igv_paid', sa.DECIMAL(precision=14, scale=2), nullable=True),
    sa.Column('total_income_tax_paid', sa.DECIMAL(precision=14, scale=2), nullable=True),
    sa.Column('total_platform_fees_paid', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_monthly_client_summaries_client_user_id'), 'monthly_client_summaries', ['client_user_id'], unique=False)
    op.create_index(op.f('ix_monthly_client_summaries_id'), 'monthly_client_summaries', ['id'], unique=False)
    op.create_index(op.f('ix_monthly_client_summaries_tax_period'), 'monthly_client_summaries', ['tax_period'], unique=False)
    op.create_table('service_contracts',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('service_type_id', sa.Integer(), nullable=False),
    sa.Column('assigned_staff_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('REQUESTED_BY_CLIENT', 'PENDING_STAFF_ASSIGNMENT', 'ASSIGNED_TO_STAFF', 'IN_PROGRESS', 'PENDING_CLIENT_ACTION', 'PENDING_CLIENT_PAYMENT_FOR_SERVICE', 'PENDING_SUNAT_PAYMENT_VIA_PLATFORM', 'COMPLETED_PAID', 'COMPLETED_NO_PAYMENT_REQUIRED', 'CANCELLED_BY_CLIENT', 'CANCELLED_BY_STAFF', 'FAILED_SUNAT_ERROR', 'FAILED_MISSING_INFO', name='servicecontractstatus'), nullable=False),
    sa.Column('tax_period', sa.String(length=7), nullable=True),
    sa.Column('specific_data', sa.JSON(), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('client_feedback_rating', sa.Integer(), nullable=True),
    sa.Column('client_feedback_comments', sa.Text(), nullable=True),
    sa.Column('final_service_fee', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('requested_at', sa.DateTime(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_staff_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_type_id'], ['service_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_contracts_assigned_staff_id'), 'service_contracts', ['assigned_staff_id'], unique=False)
    op.create_index(op.f('ix_service_contracts_client_id'), 'service_contracts', ['client_id'], unique=False)
    op.create_index(op.f('ix_service_contracts_id'), 'service_contracts', ['id'], unique=False)
    op.create_index(op.f('ix_service_contracts_service_type_id'), 'service_contracts', ['service_type_id'], unique=False)
    op.create_index(op.f('ix_service_contracts_status'), 'service_contracts', ['status'], unique=False)
    op.create_index(op.f('ix_service_contracts_tax_period'), 'service_contracts', ['tax_period'], unique=False)
    op.create_table('sunat_credentials',
    sa.Column('owner_user_id', sa.Integer(), nullable=False),
    sa.Column('sol_username', sa.String(length=50), nullable=False),
    sa.Column('encrypted_sol_password', sa.String(length=512), nullable=False),
    sa.Column('last_validated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('VALID', 'INVALID_CREDENTIALS', 'USER_BLOCKED', 'NEEDS_CAPTCHA', 'UNKNOWN_ERROR', 'PENDING_VERIFICATION', name='credentialstatus'), nullable=False),
    sa.Column('validation_failure_reason', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sunat_credentials_id'), 'sunat_credentials', ['id'], unique=False)
    op.create_index(op.f('ix_sunat_credentials_owner_user_id'), 'sunat_credentials', ['owner_user_id'], unique=False)
    op.create_table('attached_documents',
    sa.Column('service_contract_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('storage_path', sa.String(length=512), nullable=False),
    sa.Column('document_type', sa.Enum('SUNAT_DECLARATION_CONSTANCY', 'SUNAT_PAYMENT_VOUCHER', 'RXH_PDF', 'YAPE_PLIN_SCREENSHOT', 'CONSOLIDATED_REPORT_PDF', 'CLIENT_UPLOADED_DOCUMENT', 'STAFF_UPLOADED_DOCUMENT', 'OTHER', name='documenttype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_visible_to_client', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['service_contract_id'], ['service_contracts.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attached_documents_id'), 'attached_documents', ['id'], unique=False)
    op.create_index(op.f('ix_attached_documents_service_contract_id'), 'attached_documents', ['service_contract_id'], unique=False)
    op.create_index(op.f('ix_attached_documents_uploaded_by_user_id'), 'attached_documents', ['uploaded_by_user_id'], unique=False)
    op.create_table('communications',
    sa.Column('sender_user_id', sa.Integer(), nullable=True),
    sa.Column('recipient_user_id', sa.Integer(), nullable=True),
    sa.Column('service_contract_id', sa.Integer(), nullable=True),
    sa.Column('channel', sa.Enum('EMAIL', 'SMS', 'WHATSAPP', 'PLATFORM_NOTIFICATION', 'INTERNAL_LOG', name='communicationchannel'), nullable=False),
    sa.Column('status', sa.Enum('PENDING_SEND', 'SENT', 'DELIVERED', 'FAILED_TO_SEND', 'READ', name='communicationstatus'), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('message_body', sa.Text(), nullable=False),
    sa.Column('action_url', sa.String(length=512), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('provider_response_id', sa.String(length=255), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['recipient_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_contract_id'], ['service_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_communications_id'), 'communications', ['id'], unique=False)
    op.create_index(op.f('ix_communications_recipient_user_id'), 'communications', ['recipient_user_id'], unique=False)
    op.create_index(op.f('ix_communications_sender_user_id'), 'communications', ['sender_user_id'], unique=False)
    op.create_index(op.f('ix_communications_service_contract_id'), 'communications', ['service_contract_id'], unique=False)
    op.create_table('credential_access_audits',
    sa.Column('credential_id', sa.Integer(), nullable=False),
    sa.Column('accessing_user_id', sa.Integer(), nullable=False),
    sa.Column('service_contract_id', sa.Integer(), nullable=True),
    sa.Column('access_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('action_performed', sa.String(length=255), nullable=False),
    sa.Column('access_successful', sa.Boolean(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('reason_for_access', sa.Text(), nullable=True),
    sa.Column('failure_reason_if_any', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['accessing_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['credential_id'], ['sunat_credentials.id'], ),
    sa.ForeignKeyConstraint(['service_contract_id'], ['service_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credential_access_audits_accessing_user_id'), 'credential_access_audits', ['accessing_user_id'], unique=False)
    op.create_index(op.f('ix_credential_access_audits_credential_id'), 'credential_access_audits', ['credential_id'], unique=False)
    op.create_index(op.f('ix_credential_access_audits_id'), 'credential_access_audits', ['id'], unique=False)
    op.create_index(op.f('ix_credential_access_audits_service_contract_id'), 'credential_access_audits', ['service_contract_id'], unique=False)
    op.create_table('fee_payments',
    sa.Column('service_contract_id', sa.Integer(), nullable=True),
    sa.Column('paying_user_id', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_method_used', sa.Enum('YAPE', 'PLIN', 'BANK_TRANSFER', 'CASH', 'OTHER', name='paymentmethodplatform'), nullable=False),
    sa.Column('payment_reference', sa.String(length=255), nullable=True),
    sa.Column('payment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('PENDING_VERIFICATION', 'VERIFIED_PAID', 'FAILED_VERIFICATION', 'REFUNDED', 'PARTIALLY_REFUNDED', name='feepaymentstatus'), nullable=False),
    sa.Column('verified_by_staff_id', sa.Integer(), nullable=True),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('includes_sunat_tax_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['paying_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_contract_id'], ['service_contracts.id'], ),
    sa.ForeignKeyConstraint(['verified_by_staff_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fee_payments_id'), 'fee_payments', ['id'], unique=False)
    op.create_index(op.f('ix_fee_payments_paying_user_id'), 'fee_payments', ['paying_user_id'], unique=False)
    op.create_index(op.f('ix_fee_payments_payment_reference'), 'fee_payments', ['payment_reference'], unique=False)
    op.create_index(op.f('ix_fee_payments_service_contract_id'), 'fee_payments', ['service_contract_id'], unique=False)
    op.create_table('monthly_declarations',
    sa.Column('service_contract_id', sa.Integer(), nullable=False),
    sa.Column('declaration_type', sa.Enum('ORIGINAL', 'SUBSTITUTORY', 'RECTIFICATORY', name='declarationtype'), nullable=False),
    sa.Column('original_declaration_id', sa.Integer(), nullable=True),
    sa.Column('total_sales_taxable_base', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_sales_igv', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_exempt_sales', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_non_taxable_sales', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_purchases_taxable_base_for_gc', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_purchases_igv_for_gc', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('calculated_igv_payable', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('calculated_income_tax', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_sunat_debt_payable', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('sunat_presentation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sunat_order_number', sa.String(length=50), nullable=True),
    sa.Column('sunat_payment_status', sa.Enum('NOT_APPLICABLE', 'PENDING_CLIENT_DIRECT_PAYMENT', 'PAID_BY_CLIENT_DIRECTLY', 'PENDING_PAYMENT_VIA_PLATFORM', 'PAID_TO_SUNAT_VIA_PLATFORM', 'PAYMENT_FAILED', name='sunatpaymentstatus'), nullable=False),
    sa.Column('sunat_payment_nps', sa.String(length=50), nullable=True),
    sa.Column('amount_paid_to_sunat_via_platform', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['original_declaration_id'], ['monthly_declarations.id'], ),
    sa.ForeignKeyConstraint(['service_contract_id'], ['service_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_monthly_declarations_id'), 'monthly_declarations', ['id'], unique=False)
    op.create_index(op.f('ix_monthly_declarations_original_declaration_id'), 'monthly_declarations', ['original_declaration_id'], unique=False)
    op.create_index(op.f('ix_monthly_declarations_service_contract_id'), 'monthly_declarations', ['service_contract_id'], unique=True)
    op.create_index(op.f('ix_monthly_declarations_sunat_order_number'), 'monthly_declarations', ['sunat_order_number'], unique=False)
    op.create_table('payroll_receipts',
    sa.Column('service_contract_id', sa.Integer(), nullable=False),
    sa.Column('rxh_series_number', sa.String(length=10), nullable=False),
    sa.Column('rxh_correlative_number', sa.String(length=20), nullable=False),
    sa.Column('rxh_issue_date', sa.Date(), nullable=False),
    sa.Column('acquirer_doc_type', sa.String(length=10), nullable=False),
    sa.Column('acquirer_doc_number', sa.String(length=20), nullable=False),
    sa.Column('acquirer_name_or_business_name', sa.String(length=255), nullable=False),
    sa.Column('service_description', sa.Text(), nullable=False),
    sa.Column('gross_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('has_income_tax_withholding', sa.Boolean(), nullable=True),
    sa.Column('income_tax_withholding_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('net_amount_payable', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.Column('payment_method', sa.Enum('DEPOSITO_EN_CUENTA', 'TRANSFERENCIA_FONDOS', 'EFECTIVO', 'OTROS', name='paymentmethodrxh'), nullable=True),
    sa.Column('observation', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['service_contract_id'], ['service_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payroll_receipts_acquirer_doc_number'), 'payroll_receipts', ['acquirer_doc_number'], unique=False)
    op.create_index(op.f('ix_payroll_receipts_id'), 'payroll_receipts', ['id'], unique=False)
    op.create_index(op.f('ix_payroll_receipts_rxh_correlative_number'), 'payroll_receipts', ['rxh_correlative_number'], unique=False)
    op.create_index(op.f('ix_payroll_receipts_rxh_issue_date'), 'payroll_receipts', ['rxh_issue_date'], unique=False)
    op.create_index(op.f('ix_payroll_receipts_service_contract_id'), 'payroll_receipts', ['service_contract_id'], unique=True)
    op.create_table('company_tax_declarations',
    sa.Column('tax_period', sa.String(length=7), nullable=False),
    sa.Column('declaration_type', sa.Enum('MONTHLY_IGV_RENTA', 'ANNUAL_RENTA', 'PLAME', 'OTHER', name='taxdeclarationtypecompany'), nullable=False),
    sa.Column('presentation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sunat_order_number', sa.String(length=50), nullable=True),
    sa.Column('total_tax_payable', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('total_tax_paid', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.Column('payment_reference_nps', sa.String(length=50), nullable=True),
    sa.Column('constancy_document_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['constancy_document_id'], ['attached_documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_tax_declarations_declaration_type'), 'company_tax_declarations', ['declaration_type'], unique=False)
    op.create_index(op.f('ix_company_tax_declarations_id'), 'company_tax_declarations', ['id'], unique=False)
    op.create_index(op.f('ix_company_tax_declarations_sunat_order_number'), 'company_tax_declarations', ['sunat_order_number'], unique=False)
    op.create_index(op.f('ix_company_tax_declarations_tax_period'), 'company_tax_declarations', ['tax_period'], unique=False)
    op.create_table('company_transactions',
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('transaction_type', sa.Enum('INCOME', 'EXPENSE', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('related_fee_payment_id', sa.Integer(), nullable=True),
    sa.Column('reference_document_number', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['related_fee_payment_id'], ['fee_payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_transactions_category'), 'company_transactions', ['category'], unique=False)
    op.create_index(op.f('ix_company_transactions_id'), 'company_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_company_transactions_related_fee_payment_id'), 'company_transactions', ['related_fee_payment_id'], unique=False)
    op.create_index(op.f('ix_company_transactions_transaction_date'), 'company_transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_company_transactions_transaction_type'), 'company_transactions', ['transaction_type'], unique=False)
    op.create_table('yape_plin_transactions',
    sa.Column('uploader_user_id', sa.Integer(), nullable=False),
    sa.Column('fee_payment_id', sa.Integer(), nullable=True),
    sa.Column('original_image_filename', sa.String(length=255), nullable=False),
    sa.Column('image_storage_path', sa.String(length=512), nullable=False),
    sa.Column('provider', sa.Enum('YAPE', 'PLIN', 'OTHER', name='digitalwalletprovider'), nullable=True),
    sa.Column('extracted_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('extracted_currency', sa.String(length=3), nullable=True),
    sa.Column('extracted_recipient_name', sa.String(length=255), nullable=True),
    sa.Column('extracted_sender_name', sa.String(length=255), nullable=True),
    sa.Column('extracted_transaction_date', sa.Date(), nullable=True),
    sa.Column('extracted_transaction_time', sa.Time(), nullable=True),
    sa.Column('extracted_security_code', sa.String(length=10), nullable=True),
    sa.Column('extracted_phone_suffix', sa.String(length=10), nullable=True),
    sa.Column('extracted_operation_number', sa.String(length=50), nullable=True),
    sa.Column('raw_ocr_text', sa.Text(), nullable=True),
    sa.Column('llm_confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('extraction_status', sa.Enum('PENDING', 'OCR_COMPLETED', 'LLM_EXTRACTION_COMPLETED', 'OCR_FAILED', 'LLM_FAILED', 'MANUAL_VERIFICATION_REQUIRED', 'VERIFIED_MATCHED', 'VERIFIED_UNMATCHED', name='extractionstatus'), nullable=False),
    sa.Column('processing_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['fee_payment_id'], ['fee_payments.id'], ),
    sa.ForeignKeyConstraint(['uploader_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_yape_plin_transactions_extracted_operation_number'), 'yape_plin_transactions', ['extracted_operation_number'], unique=False)
    op.create_index(op.f('ix_yape_plin_transactions_fee_payment_id'), 'yape_plin_transactions', ['fee_payment_id'], unique=False)
    op.create_index(op.f('ix_yape_plin_transactions_id'), 'yape_plin_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_yape_plin_transactions_uploader_user_id'), 'yape_plin_transactions', ['uploader_user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_yape_plin_transactions_uploader_user_id'), table_name='yape_plin_transactions')
    op.drop_index(op.f('ix_yape_plin_transactions_id'), table_name='yape_plin_transactions')
    op.drop_index(op.f('ix_yape_plin_transactions_fee_payment_id'), table_name='yape_plin_transactions')
    op.drop_index(op.f('ix_yape_plin_transactions_extracted_operation_number'), table_name='yape_plin_transactions')
    op.drop_table('yape_plin_transactions')
    op.drop_index(op.f('ix_company_transactions_transaction_type'), table_name='company_transactions')
    op.drop_index(op.f('ix_company_transactions_transaction_date'), table_name='company_transactions')
    op.drop_index(op.f('ix_company_transactions_related_fee_payment_id'), table_name='company_transactions')
    op.drop_index(op.f('ix_company_transactions_id'), table_name='company_transactions')
    op.drop_index(op.f('ix_company_transactions_category'), table_name='company_transactions')
    op.drop_table('company_transactions')
    op.drop_index(op.f('ix_company_tax_declarations_tax_period'), table_name='company_tax_declarations')
    op.drop_index(op.f('ix_company_tax_declarations_sunat_order_number'), table_name='company_tax_declarations')
    op.drop_index(op.f('ix_company_tax_declarations_id'), table_name='company_tax_declarations')
    op.drop_index(op.f('ix_company_tax_declarations_declaration_type'), table_name='company_tax_declarations')
    op.drop_table('company_tax_declarations')
    op.drop_index(op.f('ix_payroll_receipts_service_contract_id'), table_name='payroll_receipts')
    op.drop_index(op.f('ix_payroll_receipts_rxh_issue_date'), table_name='payroll_receipts')
    op.drop_index(op.f('ix_payroll_receipts_rxh_correlative_number'), table_name='payroll_receipts')
    op.drop_index(op.f('ix_payroll_receipts_id'), table_name='payroll_receipts')
    op.drop_index(op.f('ix_payroll_receipts_acquirer_doc_number'), table_name='payroll_receipts')
    op.drop_table('payroll_receipts')
    op.drop_index(op.f('ix_monthly_declarations_sunat_order_number'), table_name='monthly_declarations')
    op.drop_index(op.f('ix_monthly_declarations_service_contract_id'), table_name='monthly_declarations')
    op.drop_index(op.f('ix_monthly_declarations_original_declaration_id'), table_name='monthly_declarations')
    op.drop_index(op.f('ix_monthly_declarations_id'), table_name='monthly_declarations')
    op.drop_table('monthly_declarations')
    op.drop_index(op.f('ix_fee_payments_service_contract_id'), table_name='fee_payments')
    op.drop_index(op.f('ix_fee_payments_payment_reference'), table_name='fee_payments')
    op.drop_index(op.f('ix_fee_payments_paying_user_id'), table_name='fee_payments')
    op.drop_index(op.f('ix_fee_payments_id'), table_name='fee_payments')
    op.drop_table('fee_payments')
    op.drop_index(op.f('ix_credential_access_audits_service_contract_id'), table_name='credential_access_audits')
    op.drop_index(op.f('ix_credential_access_audits_id'), table_name='credential_access_audits')
    op.drop_index(op.f('ix_credential_access_audits_credential_id'), table_name='credential_access_audits')
    op.drop_index(op.f('ix_credential_access_audits_accessing_user_id'), table_name='credential_access_audits')
    op.drop_table('credential_access_audits')
    op.drop_index(op.f('ix_communications_service_contract_id'), table_name='communications')
    op.drop_index(op.f('ix_communications_sender_user_id'), table_name='communications')
    op.drop_index(op.f('ix_communications_recipient_user_id'), table_name='communications')
    op.drop_index(op.f('ix_communications_id'), table_name='communications')
    op.drop_table('communications')
    op.drop_index(op.f('ix_attached_documents_uploaded_by_user_id'), table_name='attached_documents')
    op.drop_index(op.f('ix_attached_documents_service_contract_id'), table_name='attached_documents')
    op.drop_index(op.f('ix_attached_documents_id'), table_name='attached_documents')
    op.drop_table('attached_documents')
    op.drop_index(op.f('ix_sunat_credentials_owner_user_id'), table_name='sunat_credentials')
    op.drop_index(op.f('ix_sunat_credentials_id'), table_name='sunat_credentials')
    op.drop_table('sunat_credentials')
    op.drop_index(op.f('ix_service_contracts_tax_period'), table_name='service_contracts')
    op.drop_index(op.f('ix_service_contracts_status'), table_name='service_contracts')
    op.drop_index(op.f('ix_service_contracts_service_type_id'), table_name='service_contracts')
    op.drop_index(op.f('ix_service_contracts_id'), table_name='service_contracts')
    op.drop_index(op.f('ix_service_contracts_client_id'), table_name='service_contracts')
    op.drop_index(op.f('ix_service_contracts_assigned_staff_id'), table_name='service_contracts')
    op.drop_table('service_contracts')
    op.drop_index(op.f('ix_monthly_client_summaries_tax_period'), table_name='monthly_client_summaries')
    op.drop_index(op.f('ix_monthly_client_summaries_id'), table_name='monthly_client_summaries')
    op.drop_index(op.f('ix_monthly_client_summaries_client_user_id'), table_name='monthly_client_summaries')
    op.drop_table('monthly_client_summaries')
    op.drop_index(op.f('ix_users_staff_ruc_personal'), table_name='users')
    op.drop_index(op.f('ix_users_staff_dni'), table_name='users')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_client_ruc'), table_name='users')
    op.drop_index(op.f('ix_users_business_name'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_service_types_name'), table_name='service_types')
    op.drop_index(op.f('ix_service_types_id'), table_name='service_types')
    op.drop_table('service_types')
    # ### end Alembic commands ###
